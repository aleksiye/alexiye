@use "variables" as v;
@mixin float($direction: left) {
  @if $direction == left {
    float: left;
  } @else if $direction == right {
    float: right;
  } @else {
    float: left;
  }
}
@mixin flex(
  $direction: row,
  $wrap: nowrap,
  $justify: flex-start,
  $align: stretch,
  $align-content: flex-start,
  $gap: 0px
) {
  display: flex;
  flex-direction: #{$direction};
  flex-wrap: #{$wrap};
  justify-content: #{$justify};
  align-items: #{$align};
  align-content: #{$align-content};
  gap: #{$gap};
}
.flex-row {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}
.flex-col {
  display: flex;
  flex-direction: column;
}
.clearfix{
  clear: both;
}
.flt-l {
  float: left;
}
.flt-r {
  float: right;
}
.filter {
  width: inherit;
  height: inherit;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  transition: 700ms;
  background-color: rgba(0, 0, 0, 0.1);
}
.cover {
  width: 100%;
  height: 400px;
}
.rel-container {
  position: relative;
  display: block;
  width: 400px;
  height: fit-content;
  img {
    position: absolute;
    top: 0;
    bottom: 0;
    width: 100%;
    height: auto;
  }
}
.container {
  width: 100%;
  max-width: 1140px;
  margin: 2rem auto;
  padding: 0 1rem;
}
@mixin black-btn {
  display: inline-block;
  padding: 1rem 2rem;
  border-radius: 0.5rem;
  background-color: #000;
  color: v.$off-white;
}
@mixin white-btn{
    @include black-btn;
    background: none;
    color: #000;
    border: 0.25rem solid v.$dark-gray;
}
.anchor-btn {
  @include black-btn;
  a {
    color: v.$off-white !important;
  }
}
.grid {
  display: grid;
  gap: 1rem;
  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
}
.image-card {

}
.text-card {
    padding: 0 2rem;
}
.btn-example {
  text-align: right;
  span{
    @include white-btn;
    font-weight: 500;
    display: inline-block;
  }
}
@mixin form-element{
  padding: 0.5rem 1em;
  border: none;
  border-radius: 0.25rem;
  transition: all 0.2s;
}
@mixin focused-element{
  outline-color: v.$accent;
}